WHITE = 0
BLUE = 1
GREEN = 2
RED = 3
BLACK = 4
GOLD = 5
TAKEONEGOLD = [0,0,0,0,0,1]
NO_TOKENS = [0,0,0,0,0,0]

NB_TOKEN_2 = 4
NB_TOKEN_3 = 5
NB_TOKEN_4 = 7

BUILD = 0
RESERVE = 1
TOKENS = 2

MAX_NB_TOKENS = 10
VP_GOAL = 15
NB_MINI_TOKEN_TAKE_2 = 4
MAX_RESERVE = 3
TOP_DECK = [0,1,2]

def strColor(color):
    colors = {
        0: "w",
        1: "b",
        2: "v",
        3: "r",
        4: "n",
        5: "g"
    }
    return colors.get(color, "invalid color")

class bcolors:
    BOLD = '\033[1m'
    RESET = '\u001b[0m'
    WHITE = '\u001b[37m'
    BLUE ='\u001b[34m'
    GREEN ='\u001b[32m'
    RED ='\u001b[31m'
    BLACK ='\u001b[30m'
    YELLOW ='\u001b[33m'


def getColor(color):
    if color == WHITE:
        return bcolors.WHITE
    elif color == BLUE:
        return bcolors.BLUE
    elif color == GREEN:
        return bcolors.GREEN
    elif color == RED:
        return bcolors.RED
    elif color == BLACK:
        return bcolors.BLACK
    elif color == GOLD:
        return bcolors.YELLOW
    else:
        return bcolors.RESET

# one card : victory points, bonus, cost, lvl
DECK1 = [
    [0, 0, [0,2,0,0,2], 1],
    [0, 1, [0,0,2,0,2], 1],
    [0, 2, [0,2,0,2,0], 1],
    [0, 3, [2,0,0,2,0], 1],
    [0, 4, [2,0,2,0,0], 1],
    [0, 0, [3,1,0,0,1], 1],
    [0, 1, [0,1,3,1,0], 1],
    [0, 2, [1,3,1,0,0], 1],
    [0, 3, [1,0,0,1,3], 1],
    [0, 4, [0,0,1,3,1], 1],
    [0, 0, [0,1,2,1,1], 1],
    [0, 1, [1,0,1,2,1], 1],
    [0, 2, [1,1,0,1,2], 1],
    [0, 3, [2,1,1,0,1], 1],
    [0, 4, [1,2,1,1,0], 1],
    [0, 0, [0,0,0,2,1], 1],
    [0, 1, [1,0,0,0,2], 1],
    [0, 2, [2,1,0,0,0], 1],
    [0, 3, [0,2,1,0,0], 1],
    [0, 4, [0,0,2,1,0], 1],
    [0, 0, [0,2,2,0,1], 1],
    [0, 1, [1,0,2,2,0], 1],
    [0, 2, [0,1,0,2,2], 1],
    [0, 3, [2,0,1,0,2], 1],
    [0, 4, [2,2,0,1,0], 1],
    [0, 0, [0,1,1,1,1], 1],
    [0, 1, [1,0,1,1,1], 1],
    [0, 2, [1,1,0,1,1], 1],
    [0, 3, [1,1,1,0,1], 1],
    [0, 4, [1,1,1,1,0], 1],
    [0, 0, [0,3,0,0,0], 1],
    [0, 1, [0,0,0,0,3], 1],
    [0, 2, [0,0,0,3,0], 1],
    [0, 3, [3,0,0,0,0], 1],
    [0, 4, [0,0,3,0,0], 1],
    [1, 0, [0,0,4,0,0], 1],
    [1, 1, [0,0,0,4,0], 1],
    [1, 2, [0,0,0,0,4], 1],
    [1, 3, [4,0,0,0,0], 1],
    [1, 4, [0,4,0,0,0], 1]
]

DECK2 = [
    [1,0 ,[0,0,3,2,2],2],
    [1,1 ,[0,2,2,3,2],2],
    [1,2 ,[2,3,0,0,2],2],
    [1,3 ,[2,0,0,2,3],2],
    [1,4 ,[3,2,2,0,0],2],
    [1,0 ,[2,3,0,3,0],2],
    [1,1 ,[0,2,3,0,3],2],
    [1,2 ,[3,0,2,3,0],2],
    [1,3 ,[0,3,0,2,3],2],
    [1,4 ,[3,0,3,0,2],2],
    [2,0 ,[0,0,1,4,2],2],
    [2,1 ,[2,0,0,1,4],2],
    [2,2 ,[4,2,0,0,1],2],
    [2,3 ,[1,4,2,0,0],2],
    [2,4 ,[0,1,4,2,0],2],
    [2,0 ,[0,0,0,5,3],2],
    [2,1 ,[5,3,0,0,0],2],
    [2,2 ,[0,5,3,0,0],2],
    [2,3 ,[3,0,0,0,5],2],
    [2,4 ,[0,0,5,3,0],2],
    [2,0 ,[0,0,0,5,0],2],
    [2,1 ,[0,5,0,0,0],2],
    [2,2 ,[0,0,5,0,0],2],
    [2,3 ,[0,0,0,0,5],2],
    [2,4 ,[5,0,0,0,0],2],
    [3,0 ,[6,0,0,0,0],2],
    [3,1 ,[0,6,0,0,0],2],
    [3,2 ,[0,0,6,0,0],2],
    [3,3 ,[0,0,0,6,0],2],
    [3,4 ,[0,0,0,0,6],2]
]

DECK3 = [
    [3,0 ,[0,3,3,5,3],3],
    [3,1 ,[3,0,3,3,5],3],
    [3,2 ,[5,3,0,3,3],3],
    [3,3 ,[3,5,3,0,3],3],
    [3,4 ,[3,3,5,3,0],3],
    [4,0 ,[3,0,0,3,6],3],
    [4,1 ,[6,3,0,0,3],3],
    [4,2 ,[3,6,3,0,0],3],
    [4,3 ,[0,3,6,3,0],3],
    [4,4 ,[0,0,3,6,3],3],
    [4,0 ,[0,0,0,0,7],3],
    [4,1 ,[7,0,0,0,0],3],
    [4,2 ,[0,7,0,0,0],3],
    [4,3 ,[0,0,7,0,0],3],
    [4,4 ,[0,0,0,7,0],3],
    [5,0 ,[3,0,0,0,7],3],
    [5,1 ,[7,3,0,0,0],3],
    [5,2 ,[0,7,3,0,0],3],
    [5,3 ,[0,0,7,3,0],3],
    [5,4 ,[0,0,0,7,3],3]
]

CHARACTERS = [
    [3, [4,4,0,0,0]],
    [3, [4,0,0,0,4]],
    [3, [0,0,0,4,4]],
    [3, [0,4,4,0,0]],
    [3, [0,0,4,4,0]],
    [3, [0,3,3,3,0]],
    [3, [3,3,3,0,0]],
    [3, [0,0,3,3,3]],
    [3, [3,0,0,3,3]],
    [3, [3,3,0,0,3]]
]
